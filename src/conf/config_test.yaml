defaults:
  - task: franka
  - agent: pred_agent
  - policy: snn_policy
  - prediction: snn_prediction
  - logging: logging
  - _self_

seed: 42
experiment: test
device: cuda

model:
  repeat_input: 7
  num_layers: 2
  time:
    dt: 0.002
    tau_mem: 0.01
    tau_mem_std: 0.0
    tau_syn: 0.005
    tau_syn_std: 0.0
    tau_ada: 0.0
    tau_ada_std: 0.0
    learn_taus: true
    learn_tau_mem: ${model.time.learn_taus}
    learn_tau_syn: ${model.time.learn_taus}
    learn_tau_ada: false
    tau_param: full
    mem_param: ${model.time.tau_param}
    syn_param: ${model.time.tau_param}
    ada_param: single
  activation:
    type: gaussianspike # sigmoidspike  # should be gaussianspike with beta of 16
    beta: 16 #25
  connection:
    n_dims: null
    latent_bias: false
  hidden_dim: 512
  initializer:
    alpha: 0.9
    mu_u: 0.0
    sigma_u: 1.0
    nu: 50  # should probably be 125
    bias_scale: 1.0
    bias_mean: 0.0
    scaling: 1
  encoder:
    #- type: identity  # this is also added when the list is empty
    - type: ${run.encoder1}
    - type: ${run.encoder2}
    #- type: linear
    #- type: rbf
    #  kwargs:
    #    num_centers: 2
    #    sigma_scale: 0.5
    #    learn_sigma: false
  input:
    input_scale: 0.5
    learn_input_scale: true

optimizer:
  type: adam
  params:
    lr: 0.001
    tau_lr: 0.001

LowerBoundL2:
  strength: 0.0
  threshold: -20
  basis: mem
  dims: null   # null means per neuron, 1 means avg per layer
UpperBoundL2:
  strength: 0.0
  threshold: 0.3
  basis: out
  dims: null
weight_reg:
  l2: 0.0

run:
  encoder1: identity
  encoder2: identity
  load_dir: null
  prediction_unroll: 50
  eval_first: true
  early_stop_metric: "test average steps on target"
  early_stop_patience: 0
  early_stop_mode: "max"
  lr_decay: 1.0
  lr_warmup_steps: 0
  lr_end: 0.0001
  teacher_forcing_start: 1.0
  teacher_forcing_end: 1.0
  teacher_forcing_warmup_steps: 0
  teacher_forcing_decay_steps: 0
  action_noise_std: 0.0
  action_noise_decay: 1.0
  action_reg_weight_start: 0.0
  action_reg_weight_end: 0.0
  action_reg_weight_warmup_steps: 0
  action_smoothness_reg_weight_start: 0.0
  action_smoothness_reg_weight_end: 0.0
  action_smoothness_reg_weight_warmup_steps: ${run.action_reg_weight_warmup_steps}
  iterations: 150
  save_latest_model: false

plotting:
  render_every: 25
  prediction_animation_unroll: 50
  prediction_animation_step: 5

learning:
  batches_per_iteration: 25
  total_steps: ${mul:${task.steps_per_iteration}, ${run.iterations}}

hydra:
  run:
    dir: ./outputs/${experiment}/${now:%Y-%m-%d}/${now:%H-%M-%S-%f}